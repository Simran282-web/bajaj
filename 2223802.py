# -*- coding: utf-8 -*-
"""2223802.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dYezolbsR0tlrYPvncF3LWXBkYPi6bgV
"""

import pandas as pd
import re


file_path = "data_sample.xlsx"
xls = pd.ExcelFile(file_path)


df_attendance = pd.read_excel(xls, sheet_name="Attendance_data")
df_students = pd.read_excel(xls, sheet_name="Student_data")


df_attendance['group'] = (df_attendance['status'] != 'Absent').cumsum()
absent_streaks = df_attendance[df_attendance['status'] == 'Absent'].groupby(['student_id', 'group']).agg(
    absence_start_date=('attendance_date', 'first'),
    absence_end_date=('attendance_date', 'last'),
    total_absent_days=('attendance_date', 'count')
).reset_index().drop(columns=['group'])


latest_absences = absent_streaks.sort_values(['student_id', 'absence_end_date']).groupby('student_id').last().reset_index()


final_df = latest_absences.merge(df_students, on='student_id', how='left')


def is_valid_email(email):
    return bool(re.match(r'^[a-zA-Z0-9._%+-]+@[a-zA-Z]+\\.com$', email))

final_df['email'] = final_df['parent_email'].apply(lambda x: x if is_valid_email(x) else None)


final_df['msg'] = final_df.apply(
    lambda row: f"Dear Parent, your child {row['student_name']} was absent from {row['absence_start_date']} to {row['absence_end_date']} for {row['total_absent_days']} days. Please ensure their attendance improves."
    if row['email'] else None, axis=1
)


final_output = final_df[['student_id', 'absence_start_date', 'absence_end_date', 'total_absent_days', 'email', 'msg']]


final_output.to_csv("output.csv", index=False)


print(final_output)
